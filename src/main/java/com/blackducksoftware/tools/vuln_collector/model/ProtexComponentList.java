/*******************************************************************************
 * Copyright (C) 2015 Black Duck Software, Inc.
 * http://www.blackducksoftware.com/
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License version 2 only
 * as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License version 2
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 *******************************************************************************/
package com.blackducksoftware.tools.vuln_collector.model;

import java.util.ArrayList;
import java.util.List;

import org.apache.log4j.Logger;

import com.blackducksoftware.tools.vuln_collector.protex.VCProtexComponent;

/**
 * The main bean representing the list of all components, split up by their
 * distinct version behavior
 * 
 * @author akamen
 * 
 */
public class ProtexComponentList {

    private Logger log = Logger.getLogger(ProtexComponentList.class);

    private final List<VCProtexComponent> versionList = new ArrayList<VCProtexComponent>();
    private final List<VCProtexComponent> unspecifiedList = new ArrayList<VCProtexComponent>();

    public ProtexComponentList() {
    }

    public List<VCProtexComponent> getVersionList() {
	return versionList;
    }

    public List<VCProtexComponent> getUnspecifiedList() {
	return unspecifiedList;
    }

    private void addToVersionList(VCProtexComponent versionComp) {
	versionList.add(versionComp);
    }

    private void addToUnspecifiedList(VCProtexComponent unspecifiedComp) {
	unspecifiedList.add(unspecifiedComp);
    }

    /**
     * Adds the protex component to the appropriate list depending on the
     * version specifications
     * 
     * @param unspecifiedComp
     */
    public void addComponentToInteralList(VCProtexComponent component) {
	if (component.isVersionSpecified()) {
	    log.debug(String.format("Adding version component %s", component));
	    addToVersionList(component);
	} else {
	    log.debug(String.format("Adding unspecified component %s",
		    component));
	    addToUnspecifiedList(component);
	}
    }

}
